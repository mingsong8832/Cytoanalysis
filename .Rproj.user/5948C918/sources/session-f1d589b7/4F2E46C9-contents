rm(list=ls())
library(ggplot2)
library(tidyverse)
library(caret)
library(pROC)
library(cvms)

df <- read.csv("sig.csv", header = T, sep = ',')
groups<-as.data.frame(cbind(sample=paste('sample',rownames(df),sep = ''), group=df$Health.State))
write.table(groups,'group.txt',row.names = F,sep = '\t',quote = F)
df$Health.State<-groups$sample
rownames(df)<-df$Health.State
df<-df[,-1]
df<-as.data.frame(t(df))
train<-as.data.frame(t(df))
train$group<-factor(groups$group)


fitControl <-
  trainControl(
    method = "repeatedcv",
    number = 5, repeats = 5,
    returnResamp="final",
    classProbs = T,
    savePredictions = T,
    indexFinal=NULL,
    summaryFunction = twoClassSummary
  )

rf <- train(
  group ~ .,
  data = train,
  method = "rf",
  trControl = fitControl,
  metric = "ROC", verbose = FALSE
)

# train  
rocs_train <- roc(response = ifelse(train$group == 'A', 0, 1), predictor = rf$finalModel$votes[,2]) 
ci_auc_train <- round(as.numeric(ci.auc(rocs_train)), 3)
ci_tb_train <- as.data.frame(ci.se(rocs_train))
ci_tb_train <- rownames_to_column(ci_tb_train, var = 'x')
ci_tb_train <- as.data.frame(sapply(ci_tb_train, as.numeric))
names(ci_tb_train) <- c('x', 'low', 'mid', 'high')

metrics_train <- confusionMatrix(rf$finalModel$predicted, train$group, positive = 'A', mode = 'everything')

ggroc(rocs_train, legacy.axes = TRUE) +
  coord_equal() +
  geom_ribbon(aes(x = 1-x, ymin = low, ymax = high), data = ci_tb_train, alpha = 0.5, 
              fill = 'lightblue') +
  geom_abline(intercept = 0, slope = 1, linetype = 'dashed', alpha = 0.7) +
  geom_text(aes(0.5, 0.25, hjust = 0, 
                label = paste0('AUC: ', round(rocs_train$auc, 3), ' 95%CI: ', ci_auc_train[1], ' ~ ', ci_auc_train[3])))  +
  geom_text(aes(0.5, 0.2, hjust = 0, 
                label = paste0('Sensitivity: ', round(as.numeric(metrics_train$byClass[1]), 3)))) +
  geom_text(aes(0.5, 0.15, hjust = 0, 
                label = paste0('Specificity: ', round(as.numeric(metrics_train$byClass[2]), 3)))) +
  geom_text(aes(0.5, 0.1, hjust = 0, 
                label = paste0('F1: ', round(as.numeric(metrics_train$byClass[7]), 3)))) +
  theme_classic() +
  labs(x = '1 - Specificity (% false postivie)',
       y = 'Sensitivity (% true positive')


## Confusion matrix plot
### train
rf$finalModel$confusion[,1:2] %>%
  reshape2::melt() %>%
  ggplot(aes(x = Var1, y = rev(Var2))) + geom_tile(aes(fill = log(value))) +
  coord_equal() +
  scale_fill_gradient2(low = '#00BFC4', high ='#F8766D', midpoint = 3) +
  geom_text(aes(label = value)) +
  theme_minimal() +
  labs(x = 'Predicted', y = 'Reference') +
  theme(legend.position = '')
