Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
sankeyNetwork(Links = links, Nodes = nodes['variable'],
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
names(nodes)
nodes['variable']
sankeyNetwork(Links = links, Nodes = nodes['variable'],
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
View(links)
View(links)
View(nodes)
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'variable', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'variable', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'variable', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'names', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
family_genus <- df %>% select(family, genus, Abundance) %>% filter(genus != '') %>%
rename(source = family, target = genus, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
View(family_genus)
df <- df %>% filter(genus != '')
family_genus <- df %>% select(family, genus, Abundance) %>% filter(genus != '') %>%
rename(source = family, target = genus, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
order_family <- df %>% select(order, family, Abundance) %>% filter(family != '') %>%
rename(source = order, target = family, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
class_order <- df %>% select(class, order, Abundance) %>% filter(order != '') %>%
rename(source = class, target = order, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
phylum_class <- df %>% select(phylum, class, Abundance) %>% filter(class != '') %>%
rename(source = phylum, target = class, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
links <- rbind(family_genus, order_family, class_order, phylum_class)
nodes <- melt(df, id.vars = 'Abundance') %>% unique() %>%
rename(abundance = Abundance) %>% filter(value != '')
links$sourceID <- match(links$source, nodes$value) - 1
links$targetID <- match(links$target, nodes$value) - 1
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
aggregate(df$Abundance, by = list(df$family, df$genus), FUN = sum)
aggregate(df$Abundance, by = list(df$phylum, df$genus), FUN = sum)
nodes <- melt(df, id.vars = 'Abundance') %>% unique() %>%
rename(abundance = Abundance)
nods
nodes
head（links）
head(links)
head(nodes)
View(links)
links <- rbind(family_genus, order_family, class_order, phylum_class)
nodes <- melt(df, id.vars = 'Abundance') %>% unique() %>%
rename(abundance = Abundance)
links$sourceID <- match(links$source, nodes$value) - 1
links$targetID <- match(links$target, nodes$value) - 1
View(links)
links <- rbind(family_genus, order_family, class_order, phylum_class)
View(links)
nodes <- melt(df, id.vars = 'Abundance') %>% unique() %>%
rename(abundance = Abundance)
links$sourceID <- match(links$source, nodes$value) - 1
links$targetID <- match(links$target, nodes$value) - 1
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = FALSE)
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = T)
?sankeyNetwork
links
nods
nodes
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = T)
?sankeyNetwork
nodes
View(nodes)
nodes <- melt(df, id= 'Abundance') %>% unique() %>%
rename(abundance = Abundance)
links$sourceID <- match(links$source, nodes$value) - 1
links$targetID <- match(links$target, nodes$value) - 1
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = T)
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = F)
df
nodes <- melt(df, id= 'Abundance') %>% unique() %>% select(-Abundance)
links$sourceID <- match(links$source, nodes$value) - 1
links$targetID <- match(links$target, nodes$value) - 1
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = F)
nodes
sankeyNetwork(Links = links, Nodes = nodes[-(1:5),],
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = F)
nodes[-(1:5),],
nodes[-(1:5),]
sankeyNetwork(Links = links, Nodes = nodes[-(1),],
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = F)
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = F)
df <- read.csv('~/Downloads/YRIA.csv')
family_genus <- df %>% select(family, genus, Abundance) %>% filter(genus != '') %>%
rename(source = family, target = genus, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
order_family <- df %>% select(order, family, Abundance) %>% filter(family != '') %>%
rename(source = order, target = family, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
class_order <- df %>% select(class, order, Abundance) %>% filter(order != '') %>%
rename(source = class, target = order, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
phylum_class <- df %>% select(phylum, class, Abundance) %>% filter(class != '') %>%
rename(source = phylum, target = class, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
links <- rbind(family_genus, order_family, class_order, phylum_class)
nodes <- melt(df, id= 'Abundance') %>% unique() %>% select(-Abundance)
links$sourceID <- match(links$source, nodes$value) - 1
links$targetID <- match(links$target, nodes$value) - 1
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = F)
View(df)
View(nodes)
View(links)
df <- read.csv('~/Downloads/YRIA.csv')
family_genus <- df %>% select(family, genus, Abundance) %>% filter(genus != '') %>%
rename(source = family, target = genus, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
order_family <- df %>% select(order, family, Abundance) %>% filter(family != '') %>%
rename(source = order, target = family, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
class_order <- df %>% select(class, order, Abundance) %>% filter(order != '') %>%
rename(source = class, target = order, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
phylum_class <- df %>% select(phylum, class, Abundance) %>% filter(class != '') %>%
rename(source = phylum, target = class, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
links <- rbind(family_genus, order_family, class_order, phylum_class)
nodes <- melt(df, id= 'Abundance') %>% unique() %>% select(-Abundance)
links$sourceID <- match(links$source, nodes$value) - 1
links$targetID <- match(links$target, nodes$value) - 1
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = F)
df <- read.csv('~/Downloads/YRIA.csv')
family_genus <- df %>% select(family, genus, Abundance) %>% filter(genus != '') %>%
rename(source = family, target = genus, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
order_family <- df %>% select(order, family, Abundance) %>% filter(family != '') %>%
rename(source = order, target = family, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
class_order <- df %>% select(class, order, Abundance) %>% filter(order != '') %>%
rename(source = class, target = order, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
phylum_class <- df %>% select(phylum, class, Abundance) %>% filter(class != '') %>%
rename(source = phylum, target = class, abundance = Abundance) %>%
group_by(source, target) %>% summarise(abundance = sum(abundance))
links <- rbind(family_genus, order_family, class_order, phylum_class)
nodes <- melt(df, id= 'Abundance') %>% unique() %>% select(-Abundance)
links$sourceID <- match(links$source, nodes$value) - 1
links$targetID <- match(links$target, nodes$value) - 1
sankeyNetwork(Links = links, Nodes = nodes,
Source = 'sourceID', Target = 'targetID', Value = 'abundance',
NodeID = 'value', NodeGroup = 'variable',
fontSize = 12, sinksRight = F)
df <- read.csv("~/Downloads/YRIA.csv")
family_genus <- df[c('family', 'genus', 'Abundance')]
names(family_genus) <- c('source', 'target', 'Abundance')
order_family <- aggregate(df$Abundance, by = list(df$order, df$family), FUN = sum)
names(order_family) <- c('source', 'target', 'Abundance')
class_order <- aggregate(df$Abundance, by = list(df$class, df$order), FUN = sum)
names(class_order) <- c('source', 'target', 'Abundance')
phylum_class <- aggregate(df$Abundance, by = list(df$phylum, df$class), FUN = sum)
names(phylum_class) <- c('source', 'target', 'Abundance')
link_list <- rbind(phylum_class, class_order, order_family, family_genus)
node_list <- melt(df, id = 'Abundance')
node_list <- node_list[!duplicated(node_list$value), ]
link_list$sourceID <- match(link_list$source, node_list$value) - 1
link_list$targetID <- match(link_list$target, node_list$value) - 1
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F)
View(links)
View(nodes)
p <- sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F)
remotes::install_github("plotly/orca")
kaleido(p, file = "~/Downloads/sankey.pdf")
install.packages('reticulate')
install.packages("reticulate")
reticulate::install_miniconda()
reticulate::conda_install('r-reticulate', 'python-kaleido')
reticulate::conda_install('r-reticulate', 'plotly', channel = 'plotly')
reticulate::use_miniconda('r-reticulate')
kaleido(p, "~/Downloads/fianl_plot.pdf")
libr
library(plotly)
kaleido(p, "~/Downloads/fianl_plot.pdf")
kaleido(p, "~/Downloads/final_plot.pdf")
p
p
library(reticulate)
kaleido(p, "~/Downloads/final_plot.pdf")
orca(p, "~/Downloads/final_plot.pdf")
install.packages('admixtools')
install.packages('admixtools')
install.packages('htmlwidgets')
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
devtools::install_github('ramnathv/htmlwidgets')
library(htmlwidgets)
library(htmlwidgets)
library(htmlwidgets)
install.packages("profvis")
install.packages("profvis")
library(htmlwidgets)
saveWidget(p, "~/Downloads/final_plot.pdf")
install.packages(pdflatex)
install.packages('pdflatex')
tinytex::install_tinytex()
Y
install.packages('tlmgr')
tinytex::install_tinytex()
tinytex:: install_tinytex()
saveWidget(p, "~/Downloads/final_plot.pdf")
install.packages('htmlwidgets')
install.packages("htmlwidgets")
library(htmlwidgets)
saveWidget(p, "~/Downloads/final_plot.pdf")
library(networkD3)
library(reshape2)
setwd("F:\\species composition R code")
library(networkD3)
library(reshape2)
df <- read.csv("~/Downloads/YRIA.csv")
family_genus <- df[c('family', 'genus', 'Abundance')]
names(family_genus) <- c('source', 'target', 'Abundance')
order_family <- aggregate(df$Abundance, by = list(df$order, df$family), FUN = sum)
names(order_family) <- c('source', 'target', 'Abundance')
class_order <- aggregate(df$Abundance, by = list(df$class, df$order), FUN = sum)
names(class_order) <- c('source', 'target', 'Abundance')
phylum_class <- aggregate(df$Abundance, by = list(df$phylum, df$class), FUN = sum)
names(phylum_class) <- c('source', 'target', 'Abundance')
link_list <- rbind(phylum_class, class_order, order_family, family_genus)
node_list <- melt(df, id = 'Abundance')
node_list <- node_list[!duplicated(node_list$value), ]
link_list$sourceID <- match(link_list$source, node_list$value) - 1
link_list$targetID <- match(link_list$target, node_list$value) - 1
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F)
?sankeyNetwork
View(links)
links
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F)
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F)
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda") .range(["red"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F, colourScale = my_color)
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda"]) .range(["red"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F, colourScale = my_color)
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta"]) .range(["red", "green"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F, colourScale = my_color)
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta", "Malacostraca"]) .
range(["red", "green", "blue"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F, colourScale = my_color)
my_color <- 'd3.scaleOrdinal() .domain() .
range(["red", "green", "blue"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F, colourScale = my_color)
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta", "Malacostraca"]) .
range(["red", "green", "blue"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F, colourScale = my_color)
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta", "Malacostraca"]) .
range(["red", "green", "blue"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F, colourScale = my_color)
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta", "Diptera"]) .
range(["red", "green", "blue"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F, colourScale = my_color)
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta", "Diptera", "Chironomidae"]) .
range(["red", "green", "blue", "yellow"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F, colourScale = my_color)
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta", "Diptera", "Chironomidae", "Stratiomyia sp."]) .
range(["red", "green", "blue", "yellow", "orange"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F, colourScale = my_color)
detach("package:htmlwidgets", unload = TRUE)
remove.packages("htmlwidgets")
df <- read.csv("~/Downloads/YRIA.csv")
family_genus <- df[c('family', 'genus', 'Abundance')]
names(family_genus) <- c('source', 'target', 'Abundance')
order_family <- aggregate(df$Abundance, by = list(df$order, df$family), FUN = sum)
names(order_family) <- c('source', 'target', 'Abundance')
class_order <- aggregate(df$Abundance, by = list(df$class, df$order), FUN = sum)
names(class_order) <- c('source', 'target', 'Abundance')
phylum_class <- aggregate(df$Abundance, by = list(df$phylum, df$class), FUN = sum)
names(phylum_class) <- c('source', 'target', 'Abundance')
link_list <- rbind(phylum_class, class_order, order_family, family_genus)
node_list <- melt(df, id = 'Abundance')
node_list <- node_list[!duplicated(node_list$value), ]
link_list$sourceID <- match(link_list$source, node_list$value) - 1
link_list$targetID <- match(link_list$target, node_list$value) - 1
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta", "Diptera", "Chironomidae", "Stratiomyia sp."]) .
range(["#CB3E37","#EE9276", "#4C9AC9", "#046BBF", "#2CA361"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,nodePadding = 15,nodeWidth = 16,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "Times New Roman",
fontSize = 16, sinksRight = F, colourScale = my_color)
df <- read.csv("~/Downloads/YRIA.csv")
family_genus <- df[c('family', 'genus', 'Abundance')]
names(family_genus) <- c('source', 'target', 'Abundance')
order_family <- aggregate(df$Abundance, by = list(df$order, df$family), FUN = sum)
names(order_family) <- c('source', 'target', 'Abundance')
class_order <- aggregate(df$Abundance, by = list(df$class, df$order), FUN = sum)
names(class_order) <- c('source', 'target', 'Abundance')
phylum_class <- aggregate(df$Abundance, by = list(df$phylum, df$class), FUN = sum)
names(phylum_class) <- c('source', 'target', 'Abundance')
link_list <- rbind(phylum_class, class_order, order_family, family_genus)
node_list <- melt(df, id = 'Abundance')
node_list <- node_list[!duplicated(node_list$value), ]
link_list$sourceID <- match(link_list$source, node_list$value) - 1
link_list$targetID <- match(link_list$target, node_list$value) - 1
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta", "Diptera", "Chironomidae", "Stratiomyia sp."]) .
range(["#CB3E37","#EE9276", "#4C9AC9", "#046BBF", "#2CA361"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,nodePadding = 15,nodeWidth = 16,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "Times New Roman",
fontSize = 16, sinksRight = F, colourScale = my_color)
df <- read.csv("~/Downloads/YRIA1.csv")
family_genus <- df[c('family', 'genus', 'Abundance')]
names(family_genus) <- c('source', 'target', 'Abundance')
order_family <- aggregate(df$Abundance, by = list(df$order, df$family), FUN = sum)
names(order_family) <- c('source', 'target', 'Abundance')
class_order <- aggregate(df$Abundance, by = list(df$class, df$order), FUN = sum)
names(class_order) <- c('source', 'target', 'Abundance')
phylum_class <- aggregate(df$Abundance, by = list(df$phylum, df$class), FUN = sum)
names(phylum_class) <- c('source', 'target', 'Abundance')
link_list <- rbind(phylum_class, class_order, order_family, family_genus)
node_list <- melt(df, id = 'Abundance')
node_list <- node_list[!duplicated(node_list$value), ]
link_list$sourceID <- match(link_list$source, node_list$value) - 1
link_list$targetID <- match(link_list$target, node_list$value) - 1
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta", "Diptera", "Chironomidae", "Stratiomyia sp."]) .
range(["#CB3E37","#EE9276", "#4C9AC9", "#046BBF", "#2CA361"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,nodePadding = 15,nodeWidth = 16,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "Times New Roman",
fontSize = 16, sinksRight = F, colourScale = my_color)
df <- read.csv("~/Downloads/YRIA 1.csv")
family_genus <- df[c('family', 'genus', 'Abundance')]
names(family_genus) <- c('source', 'target', 'Abundance')
order_family <- aggregate(df$Abundance, by = list(df$order, df$family), FUN = sum)
names(order_family) <- c('source', 'target', 'Abundance')
class_order <- aggregate(df$Abundance, by = list(df$class, df$order), FUN = sum)
names(class_order) <- c('source', 'target', 'Abundance')
phylum_class <- aggregate(df$Abundance, by = list(df$phylum, df$class), FUN = sum)
names(phylum_class) <- c('source', 'target', 'Abundance')
link_list <- rbind(phylum_class, class_order, order_family, family_genus)
node_list <- melt(df, id = 'Abundance')
node_list <- node_list[!duplicated(node_list$value), ]
link_list$sourceID <- match(link_list$source, node_list$value) - 1
link_list$targetID <- match(link_list$target, node_list$value) - 1
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta", "Diptera", "Chironomidae", "Stratiomyia sp."]) .
range(["#CB3E37","#EE9276", "#4C9AC9", "#046BBF", "#2CA361"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,nodePadding = 15,nodeWidth = 16,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "Times New Roman",
fontSize = 16, sinksRight = F, colourScale = my_color)
df <- read.csv("~/Downloads/YRIA.csv")
family_genus <- df[c('family', 'genus', 'Abundance')]
names(family_genus) <- c('source', 'target', 'Abundance')
order_family <- aggregate(df$Abundance, by = list(df$order, df$family), FUN = sum)
names(order_family) <- c('source', 'target', 'Abundance')
class_order <- aggregate(df$Abundance, by = list(df$class, df$order), FUN = sum)
names(class_order) <- c('source', 'target', 'Abundance')
phylum_class <- aggregate(df$Abundance, by = list(df$phylum, df$class), FUN = sum)
names(phylum_class) <- c('source', 'target', 'Abundance')
link_list <- rbind(phylum_class, class_order, order_family, family_genus)
node_list <- melt(df, id = 'Abundance')
node_list <- node_list[!duplicated(node_list$value), ]
link_list$sourceID <- match(link_list$source, node_list$value) - 1
link_list$targetID <- match(link_list$target, node_list$value) - 1
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta", "Diptera", "Chironomidae", "Stratiomyia sp."]) .
range(["#CB3E37","#EE9276", "#4C9AC9", "#046BBF", "#2CA361"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,nodePadding = 15,nodeWidth = 16,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "Times New Roman",
fontSize = 16, sinksRight = F, colourScale = my_color)
View(link_list)
View(node_list)
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "Times New Roman",
fontSize = 16, sinksRight = F, colourScale = my_color)
sankeyNetwork(Links = link_list, Nodes =  node_list,nodePadding = 15,nodeWidth = 16,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "Times New Roman",
fontSize = 16, sinksRight = F)
sankeyNetwork(Links = link_list, Nodes =  node_list,nodePadding = 15,nodeWidth = 16,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "Times New Roman",
fontSize = 16, sinksRight = F, colourScale = my_color)
df <- read.csv("~/Downloads/YRIA.csv")
family_genus <- df[c('family', 'genus', 'Abundance')]
names(family_genus) <- c('source', 'target', 'Abundance')
order_family <- aggregate(df$Abundance, by = list(df$order, df$family), FUN = sum)
names(order_family) <- c('source', 'target', 'Abundance')
class_order <- aggregate(df$Abundance, by = list(df$class, df$order), FUN = sum)
names(class_order) <- c('source', 'target', 'Abundance')
phylum_class <- aggregate(df$Abundance, by = list(df$phylum, df$class), FUN = sum)
names(phylum_class) <- c('source', 'target', 'Abundance')
link_list <- rbind(phylum_class, class_order, order_family, family_genus)
node_list <- melt(df, id = 'Abundance')
node_list <- node_list[!duplicated(node_list$value), ]
link_list$sourceID <- match(link_list$source, node_list$value) - 1
link_list$targetID <- match(link_list$target, node_list$value) - 1
my_color <- 'd3.scaleOrdinal() .domain(["Aethropoda", "insecta", "Diptera", "Chironomidae", "Stratiomyia sp."]) .
range(["red", "green", "blue", "yellow", "orange"])'
sankeyNetwork(Links = link_list, Nodes =  node_list,
Source = 'sourceID', Target = 'targetID', Value = 'Abundance',
NodeID = 'value', NodeGroup = 'variable', fontFamily = "serif",
fontSize = 12, sinksRight = F, colourScale = my_color)
